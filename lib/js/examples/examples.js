// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Js_null = require("bs-platform/lib/js/js_null.js");

function testGetAuthToken(param) {
  chrome.identity.getAuthToken({
        interactive: true,
        scopes: {
          hd: "scope",
          tl: /* [] */0
        },
        account: {
          id: "id"
        }
      }, (function (v) {
          console.log(v);
          
        }));
  
}

chrome.identity.getProfileUserInfo(function (userInfo) {
      console.log(userInfo.email);
      
    });

chrome.identity.removeCachedAuthToken({
      token: "token"
    }, (function (param) {
        console.log("Success");
        
      }));

chrome.identity.launchWebAuthFlow({
      url: "https://example.com"
    }, (function (mResponseURL, param) {
        if (mResponseURL !== null) {
          console.log(mResponseURL);
        } else {
          console.log("No url returned!");
        }
        
      }));

var testGetRedirectURL = chrome.identity.getRedirectURL(Js_null.fromOption("path"));

chrome.identity.onSignInChanged.addListener(function (accountInfo, signedIn) {
      console.log(signedIn);
      console.log(accountInfo.id);
      
    });

var testGetProfileUserInfo;

var testRemoveCachedAuthToken;

var testLaunchWebAuthFlow;

var testOnSignInChanged;

exports.testGetAuthToken = testGetAuthToken;
exports.testGetProfileUserInfo = testGetProfileUserInfo;
exports.testRemoveCachedAuthToken = testRemoveCachedAuthToken;
exports.testLaunchWebAuthFlow = testLaunchWebAuthFlow;
exports.testGetRedirectURL = testGetRedirectURL;
exports.testOnSignInChanged = testOnSignInChanged;
/*  Not a pure module */
